{"version":3,"file":"Team.js","sources":["../../src/components/players/PlayerCard.tsx","../../src/components/Team.tsx","../../src/pages/Team.tsx"],"sourcesContent":["import React from 'react';\nimport { Player } from '@/types/models';\nimport { cn } from '@/lib/utils';\n\ninterface PlayerCardProps {\n  player: Player;\n  primaryColor: string;\n}\n\nconst PlayerCard: React.FC<PlayerCardProps> = ({ player, primaryColor }) => {\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\n      {/* Player Image */}\n      <div className=\"relative aspect-[3/4]\">\n          <img \n          src={player.photo}\n            alt={player.name} \n          className=\"w-full h-full object-cover\"\n          />\n          <div \n          className=\"absolute inset-0\"\n          style={{\n            background: `linear-gradient(to bottom, transparent 50%, ${primaryColor})`,\n            opacity: 0.8\n          }}\n        />\n        <div className=\"absolute bottom-0 left-0 right-0 p-4\">\n          <h3 className=\"text-white text-lg font-bold\">{player.name}</h3>\n          <p className=\"text-white/80 text-sm\">{player.position}</p>\n        </div>\n            </div>\n            \n      {/* Player Stats */}\n      <div className=\"p-4\">\n        <div className=\"grid grid-cols-5 gap-2 text-center\">\n          <div>\n            <p className=\"text-xs text-gray-500 mb-1\">Игры</p>\n            <p className=\"font-semibold\">{player.stats?.games || 0}</p>\n              </div>\n          <div>\n            <p className=\"text-xs text-gray-500 mb-1\">Голы</p>\n            <p className=\"font-semibold\">{player.stats?.goals || 0}</p>\n              </div>\n          <div>\n            <p className=\"text-xs text-gray-500 mb-1\">Передачи</p>\n            <p className=\"font-semibold\">{player.stats?.assists || 0}</p>\n              </div>\n          <div>\n            <p className=\"text-xs text-gray-500 mb-1\">ЖК</p>\n            <p className=\"font-semibold\">{player.stats?.yellowCards || 0}</p>\n            </div>\n          <div>\n            <p className=\"text-xs text-gray-500 mb-1\">КК</p>\n            <p className=\"font-semibold\">{player.stats?.redCards || 0}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerCard;\n","import React, { useEffect, useState } from 'react';\nimport { Player, Team } from '@/types/models';\nimport { Coach } from '@/types/coach';\nimport { db } from '@/lib/db';\nimport { Button } from './ui/button';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from './ui/table';\nimport { cn } from '@/lib/utils';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { ScrollArea } from './ui/scroll-area';\nimport PlayerCard from './players/PlayerCard';\n\nconst Team = React.memo(() => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTeam, setSelectedTeam] = useState<string | null>(null);\n  const [teams, setTeams] = useState<Team[]>([]);\n  const [coaches, setCoaches] = useState<Coach[]>([]);\n  const [isCoachModalOpen, setIsCoachModalOpen] = useState(false);\n  const [editingCoach, setEditingCoach] = useState<Coach | null>(null);\n  const [coachForm, setCoachForm] = useState({\n    name: '',\n    team_id: '',\n    photo: '',\n    nationality: '',\n    age: '',\n    experience: '',\n    achievements: '',\n  });\n\n  useEffect(() => {\n    loadData();\n    loadCoaches();\n  }, []);\n\n  const loadData = async () => {\n    try {\n      setIsLoading(true);\n      // Загружаем команды из базы данных\n      const teamsData = await db.getTeams();\n      setTeams(teamsData);\n      \n      // Загружаем игроков\n      const playersData = await db.getPlayers();\n      setPlayers(playersData);\n    } catch (error) {\n      console.error('Error loading data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const loadCoaches = async () => {\n    const data = await db.getCoaches();\n    setCoaches(data);\n  };\n\n  const handleCoachSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const coachData = {\n        ...coachForm,\n        age: coachForm.age ? Number(coachForm.age) : undefined,\n        experience: coachForm.experience ? Number(coachForm.experience) : undefined,\n      };\n      if (editingCoach) {\n        await db.updateCoach(editingCoach.id, coachData);\n      } else {\n        await db.createCoach(coachData);\n      }\n      setIsCoachModalOpen(false);\n      setEditingCoach(null);\n      setCoachForm({\n        name: '',\n        team_id: '',\n        photo: '',\n        nationality: '',\n        age: '',\n        experience: '',\n        achievements: '',\n      });\n      loadCoaches();\n    } catch (error) {\n      console.error('Error saving coach:', error);\n    }\n  };\n\n  const handleEditCoach = (coach: Coach) => {\n    setEditingCoach(coach);\n    setCoachForm({\n      name: coach.name,\n      team_id: coach.team_id,\n      photo: coach.photo || '',\n      nationality: coach.nationality || '',\n      age: coach.age ? String(coach.age) : '',\n      experience: coach.experience ? String(coach.experience) : '',\n      achievements: coach.achievements || '',\n    });\n    setIsCoachModalOpen(true);\n  };\n\n  const handleDeleteCoach = async (id: string) => {\n    if (window.confirm('Вы уверены, что хотите удалить этого тренера?')) {\n      try {\n        await db.deleteCoach(id);\n        loadCoaches();\n      } catch (error) {\n        console.error('Error deleting coach:', error);\n      }\n    }\n  };\n\n  const filteredPlayers = selectedTeam\n    ? players.filter(player => player.team_id === selectedTeam)\n    : players;\n\n  const formatDate = (date: Date) => {\n    return new Date(date).toLocaleDateString('ru-RU', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    });\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Команда</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-wrap gap-2 mb-6\">\n            <Button\n              variant={selectedTeam === null ? \"default\" : \"outline\"}\n              onClick={() => setSelectedTeam(null)}\n            >\n              Все команды\n            </Button>\n            {teams.map(team => (\n              <Button\n                key={team.id}\n                variant={selectedTeam === team.id ? \"default\" : \"outline\"}\n                onClick={() => setSelectedTeam(team.id)}\n              >\n                {team.name}\n              </Button>\n            ))}\n          </div>\n          {filteredPlayers.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-500 text-lg\">Нет данных</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n              {filteredPlayers.map((player) => (\n                <PlayerCard\n                  key={player.id}\n                  player={player}\n                  primaryColor={\n                    teams.find(t => t.id === player.team_id)?.primaryColor || '#222'\n                  }\n                />\n              ))}\n            </div>\n          )}\n          <div className=\"my-12 border-t border-gray-200 pt-8\">\n            <h2 className=\"text-2xl font-bold mb-6\">Тренеры</h2>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n              {coaches.filter(coach => !selectedTeam || coach.team_id === selectedTeam).length === 0 ? (\n                <div className=\"text-center py-12 col-span-full\">\n                  <p className=\"text-gray-500 text-lg\">Нет тренеров</p>\n                </div>\n              ) : (\n                coaches\n                  .filter(coach => !selectedTeam || coach.team_id === selectedTeam)\n                  .map((coach) => (\n                    <div key={coach.id} className=\"bg-white rounded-lg shadow-md p-6 flex flex-col items-center\">\n                      {coach.photo && <img src={coach.photo} alt={coach.name} className=\"w-24 h-24 rounded-full object-cover mb-4\" />}\n                      <h3 className=\"text-xl font-semibold mb-1\">{coach.name}</h3>\n                      <p className=\"text-gray-500 text-sm mb-2\">{coach.nationality}</p>\n                      <p className=\"text-gray-500 text-sm mb-2\">Возраст: {coach.age || '-'}</p>\n                      <p className=\"text-gray-500 text-sm mb-2\">Опыт: {coach.experience || '-'} лет</p>\n                      {coach.achievements && <p className=\"text-gray-700 text-xs mb-2\">{coach.achievements}</p>}\n                    </div>\n                  ))\n              )}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n});\n\nTeam.displayName = 'Team';\n\nexport default Team; ","import React, { useState, useEffect } from 'react';\nimport Team from '@/components/Team';\nimport Navbar from '@/components/Navbar';\nimport Footer from '@/components/Footer';\nimport { db } from '@/lib/db'; // Import db\n\nconst Team2Page = () => {\n  const [activeTeam, setActiveTeam] = useState<string>('gudauta'); // State for active team\n  // const [teams, setTeams] = useState<any[]>([]); // State for list of teams (тип any, если не используется)\n  \n  // Placeholder state and effect for Team2 specific data based on activeTeam\n  // Replace with actual data fetching logic for Team2 if needed\n  const [team2Data, setTeam2Data] = useState<any>(null);\n\n  useEffect(() => {\n    // Load teams data from SQLite\n    const loadTeams = async () => {\n      try {\n        // Cast the result to the TeamType expected by TeamHeader\n        const teamsData = await db.getTeams(); \n        // setTeams(teamsData);\n      } catch (error) {\n        console.error('Error loading teams:', error);\n      }\n    };\n    loadTeams();\n  }, []);\n  \n  useEffect(() => {\n    // Load data specific to Team2 based on activeTeam\n    // Replace with actual data fetching logic for Team2\n    const loadTeam2Data = async () => {\n      if (activeTeam) {\n        console.log(`Fetching data for team: ${activeTeam}`);\n        // Example: Fetch data from db or API based on activeTeam\n        // const data = await db.getTeam2Data(activeTeam);\n        // setTeam2Data(data);\n      }\n    };\n    loadTeam2Data();\n  }, [activeTeam]);\n\n  // const handleTeamChange = (teamId: string) => {\n  //   setActiveTeam(teamId);\n  //   // You might want to reset other state here if needed for Team2\n  // };\n\n  // const currentTeam = teams.find(team => team.id === activeTeam);\n  // const primaryColor = currentTeam?.primaryColor || '#000000';\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Navbar />\n      \n      <main className=\"flex-grow pt-16 page-transition\">\n        {/* Team2 component - pass activeTeamId if needed for component logic */}\n        <div className=\"py-12 px-4 sm:px-6 lg:px-8 max-w-7xl mx-auto\">\n          {/* Pass activeTeamId to Team2 if its content depends on the selected team */}\n          <Team />\n        </div>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n};\n\nexport default Team2Page; "],"names":["PlayerCard","player","primaryColor","jsxs","jsx","_a","_b","_c","_d","_e","Team","React","players","setPlayers","useState","isLoading","setIsLoading","selectedTeam","setSelectedTeam","teams","setTeams","coaches","setCoaches","isCoachModalOpen","setIsCoachModalOpen","editingCoach","setEditingCoach","coachForm","setCoachForm","useEffect","loadData","loadCoaches","__async","teamsData","db","playersData","error","data","filteredPlayers","Card","CardHeader","CardTitle","CardContent","Button","team","t","coach","Team2Page","activeTeam","setActiveTeam","team2Data","setTeam2Data","Navbar","Footer"],"mappings":"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"}