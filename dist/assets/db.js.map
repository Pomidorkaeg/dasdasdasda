{"version":3,"file":"db.js","sources":["../../src/lib/db.ts"],"sourcesContent":["import { Team, Player, Match, News, Media, Training } from '@/types/models';\nimport { teamsApi, playersApi, matchesApi, newsApi, getCoaches, getCoach, createCoach, updateCoach, deleteCoach } from '@/api/api';\nimport { Coach } from '@/types/coach';\n\nclass DatabaseService {\n  // Teams\n  async getTeams(): Promise<Team[]> {\n    return teamsApi.getAll();\n  }\n\n  async getTeamById(id: string): Promise<Team> {\n    return teamsApi.getById(id);\n  }\n\n  async createTeam(team: Omit<Team, 'id'>): Promise<Team> {\n    return teamsApi.create(team);\n  }\n\n  async updateTeam(id: string, team: Partial<Omit<Team, 'id'>>): Promise<Team> {\n    return teamsApi.update(id, team);\n  }\n\n  async deleteTeam(id: string): Promise<void> {\n    return teamsApi.delete(id);\n  }\n\n  // Players\n  async getPlayers(): Promise<Player[]> {\n    return playersApi.getByTeam('');\n  }\n\n  async getPlayersByTeam(teamId: string): Promise<Player[]> {\n    return playersApi.getByTeam(teamId);\n  }\n\n  async createPlayer(player: Omit<Player, 'id'>): Promise<Player> {\n    return playersApi.create(player);\n  }\n\n  async updatePlayer(id: string, player: Partial<Omit<Player, 'id'>>): Promise<Player> {\n    return playersApi.update(id, player);\n  }\n\n  async deletePlayer(id: string): Promise<void> {\n    return playersApi.delete(id);\n  }\n\n  // Matches\n  async getMatches(): Promise<Match[]> {\n    return matchesApi.getAll();\n  }\n\n  async getMatchById(id: string): Promise<Match> {\n    return matchesApi.getById(id);\n  }\n\n  async createMatch(match: Omit<Match, 'id'>): Promise<Match> {\n    return matchesApi.create(match);\n  }\n\n  async updateMatch(id: string, match: Partial<Omit<Match, 'id'>>): Promise<Match> {\n    return matchesApi.update(id, match);\n  }\n\n  async deleteMatch(id: string): Promise<void> {\n    return matchesApi.delete(id);\n  }\n\n  // News\n  async getNews(): Promise<News[]> {\n    return newsApi.getAll();\n  }\n\n  async getNewsItem(id: string): Promise<News | null> {\n    try {\n      return await newsApi.getById(id);\n    } catch (error) {\n      console.error('Error getting news item:', error);\n      return null;\n    }\n  }\n\n  async createNews(news: Omit<News, 'id'>): Promise<News> {\n    return newsApi.create(news);\n  }\n\n  async updateNews(id: string, news: Partial<Omit<News, 'id'>>): Promise<News> {\n    return newsApi.update(id, news);\n  }\n\n  async deleteNews(id: string): Promise<void> {\n    return newsApi.delete(id);\n  }\n\n  // Media\n  async getMedia(): Promise<Media[]> {\n    const res = await fetch('http://192.168.68.102:8080/api/media');\n    return res.json();\n  }\n\n  async getMediaItem(id: string): Promise<Media | null> {\n    try {\n      const res = await fetch(`http://192.168.68.102:8080/api/media/${id}`);\n      return res.json();\n    } catch (error) {\n      console.error('Error getting media item:', error);\n      return null;\n    }\n  }\n\n  async createMedia(media: Omit<Media, 'id'>): Promise<Media> {\n    const res = await fetch('http://192.168.68.102:8080/api/media', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(media)\n    });\n    return res.json();\n  }\n\n  async updateMedia(id: string, media: Partial<Omit<Media, 'id'>>): Promise<Media> {\n    const res = await fetch(`http://192.168.68.102:8080/api/media/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(media)\n    });\n    return res.json();\n  }\n\n  async deleteMedia(id: string): Promise<void> {\n    await fetch(`http://192.168.68.102:8080/api/media/${id}`, {\n      method: 'DELETE'\n    });\n  }\n\n  // Trainings\n  async getTrainings(): Promise<Training[]> {\n    const res = await fetch('http://localhost:3001/api/trainings');\n    return res.json();\n  }\n\n  async createTraining(training: Omit<Training, 'id'>): Promise<Training> {\n    const res = await fetch('http://localhost:3001/api/trainings', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(training)\n    });\n    return res.json();\n  }\n\n  async updateTraining(id: string, training: Partial<Omit<Training, 'id'>>): Promise<Training> {\n    const res = await fetch(`http://localhost:3001/api/trainings/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(training)\n    });\n    return res.json();\n  }\n\n  async deleteTraining(id: string): Promise<void> {\n    await fetch(`http://localhost:3001/api/trainings/${id}`, {\n      method: 'DELETE'\n    });\n  }\n\n  // Coaches\n  async getCoaches(): Promise<Coach[]> {\n    return getCoaches();\n  }\n\n  async createCoach(coach: Omit<Coach, 'id'>): Promise<Coach> {\n    return createCoach(coach);\n  }\n\n  async updateCoach(id: string, coach: Partial<Coach>): Promise<Coach> {\n    return updateCoach(id, coach);\n  }\n\n  async deleteCoach(id: string): Promise<void> {\n    return deleteCoach(id);\n  }\n}\n\nexport const db = new DatabaseService(); "],"names":["DatabaseService","__async","teamsApi","id","team","playersApi","teamId","player","matchesApi","match","newsApi","error","news","media","training","getCoaches","coach","createCoach","updateCoach","deleteCoach","db"],"mappings":"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"}