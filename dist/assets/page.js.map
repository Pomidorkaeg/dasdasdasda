{"version":3,"file":"page.js","sources":["../../src/app/admin/components/TeamsSection.tsx","../../src/app/admin/components/PlayersSection.tsx","../../src/app/admin/components/MatchesSection.tsx","../../src/app/admin/components/NewsSection.tsx","../../src/app/admin/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Team } from '@/types/models';\r\nimport { db } from '@/lib/db';\r\nimport { Plus, Edit, Trash2 } from 'lucide-react';\r\n\r\nconst TeamsSection = () => {\r\n  const [teams, setTeams] = useState<Team[]>([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingTeam, setEditingTeam] = useState<Team | null>(null);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    shortName: '',\r\n    description: '',\r\n    logo: '',\r\n    backgroundImage: '',\r\n    primaryColor: '#000000',\r\n    secondaryColor: '#ffffff',\r\n    coach: '',\r\n    foundedYear: new Date().getFullYear(),\r\n    stadium: '',\r\n    address: '',\r\n    city: '',\r\n    country: '',\r\n    website: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadTeams();\r\n  }, []);\r\n\r\n  const loadTeams = async () => {\r\n    const teamsData = await db.getTeams();\r\n    setTeams(teamsData);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editingTeam) {\r\n        await db.updateTeam(editingTeam.id, formData);\r\n      } else {\r\n        await db.createTeam({\r\n          ...formData,\r\n          socialLinks: {},\r\n          stats: {\r\n            matches: 0,\r\n            wins: 0,\r\n            draws: 0,\r\n            losses: 0,\r\n            goalsFor: 0,\r\n            goalsAgainst: 0,\r\n            points: 0\r\n          }\r\n        });\r\n      }\r\n      setIsModalOpen(false);\r\n      setEditingTeam(null);\r\n      setFormData({\r\n        name: '',\r\n        shortName: '',\r\n        description: '',\r\n        logo: '',\r\n        backgroundImage: '',\r\n        primaryColor: '#000000',\r\n        secondaryColor: '#ffffff',\r\n        coach: '',\r\n        foundedYear: new Date().getFullYear(),\r\n        stadium: '',\r\n        address: '',\r\n        city: '',\r\n        country: '',\r\n        website: '',\r\n      });\r\n      loadTeams();\r\n    } catch (error) {\r\n      console.error('Error saving team:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (team: Team) => {\r\n    setEditingTeam(team);\r\n    setFormData({\r\n      name: team.name,\r\n      shortName: team.shortName,\r\n      description: team.description,\r\n      logo: team.logo,\r\n      backgroundImage: team.backgroundImage,\r\n      primaryColor: team.primaryColor,\r\n      secondaryColor: team.secondaryColor,\r\n      coach: team.coach,\r\n      foundedYear: team.foundedYear,\r\n      stadium: team.stadium,\r\n      address: team.address,\r\n      city: team.city,\r\n      country: team.country,\r\n      website: team.website,\r\n    });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    if (window.confirm('Вы уверены, что хотите удалить эту команду?')) {\r\n      try {\r\n        await db.deleteTeam(id);\r\n        loadTeams();\r\n      } catch (error) {\r\n        console.error('Error deleting team:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-2xl font-bold\">Управление командами</h2>\r\n        <button\r\n          onClick={() => setIsModalOpen(true)}\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded-lg flex items-center\"\r\n        >\r\n          <Plus className=\"w-5 h-5 mr-2\" />\r\n          Добавить команду\r\n        </button>\r\n      </div>\r\n\r\n      {/* Teams Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {teams.map((team) => (\r\n          <div key={team.id} className=\"bg-white rounded-lg shadow-md p-6\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-xl font-semibold\">{team.name}</h3>\r\n              <div className=\"flex space-x-2\">\r\n                <button\r\n                  onClick={() => handleEdit(team)}\r\n                  className=\"text-blue-500 hover:text-blue-700\"\r\n                >\r\n                  <Edit className=\"w-5 h-5\" />\r\n                </button>\r\n                <button\r\n                  onClick={() => handleDelete(team.id)}\r\n                  className=\"text-red-500 hover:text-red-700\"\r\n                >\r\n                  <Trash2 className=\"w-5 h-5\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <p className=\"text-gray-600 mb-2\">{team.description}</p>\r\n            <div className=\"text-sm text-gray-500\">\r\n              <p>Тренер: {team.coach}</p>\r\n              <p>Стадион: {team.stadium}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Modal */}\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl\">\r\n            <h3 className=\"text-xl font-bold mb-4\">\r\n              {editingTeam ? 'Редактировать команду' : 'Добавить команду'}\r\n            </h3>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Название</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.name}\r\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-3 py-2\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Короткое название</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.shortName}\r\n                    onChange={(e) => setFormData({ ...formData, shortName: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-3 py-2\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"col-span-2\">\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Описание</label>\r\n                  <textarea\r\n                    value={formData.description}\r\n                    onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-3 py-2\"\r\n                    rows={3}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Тренер</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.coach}\r\n                    onChange={(e) => setFormData({ ...formData, coach: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-3 py-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Год основания</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={formData.foundedYear}\r\n                    onChange={(e) => setFormData({ ...formData, foundedYear: parseInt(e.target.value) })}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-3 py-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Стадион</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.stadium}\r\n                    onChange={(e) => setFormData({ ...formData, stadium: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-3 py-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Адрес</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.address}\r\n                    onChange={(e) => setFormData({ ...formData, address: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-3 py-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Город</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.city}\r\n                    onChange={(e) => setFormData({ ...formData, city: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-3 py-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Страна</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.country}\r\n                    onChange={(e) => setFormData({ ...formData, country: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-3 py-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Веб-сайт</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.website}\r\n                    onChange={(e) => setFormData({ ...formData, website: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-3 py-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">URL логотипа</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.logo}\r\n                    onChange={(e) => setFormData({ ...formData, logo: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-3 py-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">URL фона</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.backgroundImage}\r\n                    onChange={(e) => setFormData({ ...formData, backgroundImage: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 px-3 py-2\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Основной цвет</label>\r\n                  <input\r\n                    type=\"color\"\r\n                    value={formData.primaryColor}\r\n                    onChange={(e) => setFormData({ ...formData, primaryColor: e.target.value })}\r\n                    className=\"mt-1 block w-full h-10 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Дополнительный цвет</label>\r\n                  <input\r\n                    type=\"color\"\r\n                    value={formData.secondaryColor}\r\n                    onChange={(e) => setFormData({ ...formData, secondaryColor: e.target.value })}\r\n                    className=\"mt-1 block w-full h-10 rounded-md border border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-end space-x-4 mt-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setIsModalOpen(false);\r\n                    setEditingTeam(null);\r\n                    setFormData({\r\n                      name: '',\r\n                      shortName: '',\r\n                      description: '',\r\n                      logo: '',\r\n                      backgroundImage: '',\r\n                      primaryColor: '#000000',\r\n                      secondaryColor: '#ffffff',\r\n                      coach: '',\r\n                      foundedYear: new Date().getFullYear(),\r\n                      stadium: '',\r\n                      address: '',\r\n                      city: '',\r\n                      country: '',\r\n                      website: '',\r\n                    });\r\n                  }}\r\n                  className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200\"\r\n                >\r\n                  Отмена\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 text-white bg-blue-500 rounded-lg hover:bg-blue-600\"\r\n                >\r\n                  {editingTeam ? 'Сохранить' : 'Добавить'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamsSection; ","'use client';\n\nimport { useState, useEffect } from 'react';\nimport type { Player } from '@/types/models';\nimport type { Team } from '@/types/models';\nimport { db } from '@/lib/db';\nimport { Plus, Edit, Trash2 } from 'lucide-react';\nimport { DeletePlayerDialog } from '@/components/DeletePlayerDialog';\n\nconst PlayersSection = () => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [teams, setTeams] = useState<Team[]>([]);\n  const [selectedTeamId, setSelectedTeamId] = useState<string>('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingPlayer, setEditingPlayer] = useState<Player | null>(null);\n  const [deletingPlayer, setDeletingPlayer] = useState<Player | null>(null);\n  const [formData, setFormData] = useState<Omit<Player, 'id'>>({\n    name: '',\n    position: '',\n    number: 0,\n    team_id: '',\n    team_name: '',\n    nationality: '',\n    age: 0,\n    height: 0,\n    weight: 0,\n    photo: '',\n    stats: {\n      games: 0,\n      goals: 0,\n      assists: 0,\n      yellowCards: 0,\n      redCards: 0\n    }\n  });\n\n  useEffect(() => {\n    loadTeams();\n    loadPlayers(''); // Load all players initially\n  }, []);\n\n  const loadTeams = async () => {\n    try {\n      const teamsData = await db.getTeams();\n      setTeams(teamsData);\n    } catch (error) {\n      console.error('Error loading teams:', error);\n    }\n  };\n\n  const loadPlayers = async (teamId?: string) => {\n    try {\n      const playersData = teamId ? await db.getPlayersByTeam(teamId) : await db.getPlayers();\n      setPlayers(playersData);\n    } catch (error) {\n      console.error('Error loading players:', error);\n    }\n  };\n\n  const handleTeamChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newTeamId = e.target.value;\n    setSelectedTeamId(newTeamId);\n    loadPlayers(newTeamId);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('Handling form submission with formData:', formData);\n    try {\n      if (editingPlayer) {\n        console.log('Attempting to update player with ID:', editingPlayer.id, 'and data:', formData);\n        await db.updatePlayer(editingPlayer.id, formData);\n        console.log('Player updated successfully.');\n      } else {\n        console.log('Attempting to create new player with data:', formData);\n        await db.createPlayer(formData);\n        console.log('Player created successfully.');\n      }\n      setIsModalOpen(false);\n      setEditingPlayer(null);\n      setFormData({\n        name: '',\n        position: '',\n        number: 0,\n        team_id: '',\n        team_name: '',\n        nationality: '',\n        age: 0,\n        height: 0,\n        weight: 0,\n        photo: '',\n        stats: {\n          games: 0,\n          goals: 0,\n          assists: 0,\n          yellowCards: 0,\n          redCards: 0\n        }\n      });\n      loadPlayers(selectedTeamId);\n    } catch (error) {\n      console.error('Error saving player:', error);\n    }\n  };\n\n  const handleEdit = (player: Player) => {\n    setEditingPlayer(player);\n    setFormData({\n      name: player.name,\n      position: player.position,\n      number: player.number,\n      team_id: player.team_id,\n      team_name: player.team_name,\n      nationality: player.nationality,\n      age: player.age,\n      height: player.height,\n      weight: player.weight,\n      photo: player.photo,\n      stats: player.stats\n    });\n    setIsModalOpen(true);\n  };\n\n  const handleDelete = async (id: string) => {\n    try {\n      await db.deletePlayer(id);\n      loadPlayers(selectedTeamId);\n      setDeletingPlayer(null);\n    } catch (error) {\n      console.error('Error deleting player:', error);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-bold\">Управление игроками</h2>\n        <button\n          onClick={() => {\n            setEditingPlayer(null);\n            setFormData({\n              name: '',\n              position: '',\n              number: 0,\n              team_id: '',\n              team_name: '',\n              nationality: '',\n              age: 0,\n              height: 0,\n              weight: 0,\n              photo: '',\n              stats: {\n                games: 0,\n                goals: 0,\n                assists: 0,\n                yellowCards: 0,\n                redCards: 0\n              }\n            });\n            setIsModalOpen(true);\n          }}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded-lg flex items-center\"\n        >\n          <Plus className=\"w-5 h-5 mr-2\" />\n          Добавить игрока\n        </button>\n      </div>\n\n      {/* Team Filter Buttons */}\n      <div className=\"flex space-x-4 mb-6\">\n        <button\n          onClick={() => handleTeamChange({ target: { value: '' } } as React.ChangeEvent<HTMLSelectElement>)}\n          className={`px-4 py-2 rounded-lg ${selectedTeamId === '' ? 'bg-green-700 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}\n        >\n          Все команды\n        </button>\n        {teams.map(team => (\n          <button\n            key={team.id}\n            onClick={() => handleTeamChange({ target: { value: team.id } } as React.ChangeEvent<HTMLSelectElement>)}\n            className={`px-4 py-2 rounded-lg ${selectedTeamId === team.id ? 'bg-green-700 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`}\n          >\n            {team.name}\n          </button>\n        ))}\n      </div>\n\n      {/* Players Table */}\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Имя</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Команда</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Позиция</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Национальность</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Возраст</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Рост (см)</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Вес (кг)</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Игры</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Голы</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Передачи</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Желтые карточки</th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Красные карточки</th>\n              <th scope=\"col\" className=\"relative px-6 py-3\">\n                <span className=\"sr-only\">Edit</span>\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {players.map((player) => (\n              <tr key={player.id}>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0 h-10 w-10\">\n                      <img className=\"h-10 w-10 rounded-full\" src={player.photo || '/default-player.png'} alt={player.name} />\n                    </div>\n                    <div className=\"ml-4\">\n                      <div className=\"text-sm font-medium text-gray-900\">{player.name}</div>\n                    </div>\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900\">{player.team_name || '-'}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900\">{player.position}</div>\n                </td>\n                 <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {player.nationality || '-'}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {player.age || '-'}\n                </td>\n                 <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {player.height || '-'}\n                </td>\n                 <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {player.weight || '-'}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {player.stats?.games ?? 0}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {player.stats?.goals ?? 0}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {player.stats?.assists ?? 0}\n                </td>\n                 <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {player.stats?.yellowCards ?? 0}\n                </td>\n                 <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  {player.stats?.redCards ?? 0}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                  <button\n                    onClick={() => handleEdit(player)}\n                    className=\"text-blue-600 hover:text-blue-900 mr-4\"\n                  >\n                    Edit\n                  </button>\n                  <button\n                    onClick={() => setDeletingPlayer(player)}\n                    className=\"text-red-600 hover:text-red-900\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Modal */}\n      {isModalOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl\">\n            <h3 className=\"text-xl font-bold mb-4\">\n              {editingPlayer ? 'Редактировать игрока' : 'Добавить игрока'}\n            </h3>\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Имя</label>\n                  <input\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Позиция</label>\n                  <select\n                    value={formData.position}\n                    onChange={(e) => setFormData({ ...formData, position: e.target.value })}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                    required\n                  >\n                    <option value=\"\">Выберите позицию</option>\n                    <option value=\"Вратарь\">Вратарь</option>\n                    <option value=\"Защитник\">Защитник</option>\n                    <option value=\"Полузащитник\">Полузащитник</option>\n                    <option value=\"Нападающий\">Нападающий</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Номер</label>\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"99\"\n                    value={formData.number}\n                    onChange={(e) => setFormData({ ...formData, number: parseInt(e.target.value) })}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Возраст</label>\n                  <input\n                    type=\"number\"\n                    min=\"16\"\n                    max=\"50\"\n                    value={formData.age}\n                    onChange={(e) => setFormData({ ...formData, age: parseInt(e.target.value) })}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">URL фото</label>\n                <input\n                  type=\"text\"\n                  value={formData.photo}\n                  onChange={(e) => setFormData({ ...formData, photo: e.target.value })}\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                  required\n                />\n              </div>\n\n              {/* Add dropdown for Team selection in the modal */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">Команда</label>\n                <select\n                  value={formData.team_id}\n                  onChange={(e) => {\n                    const selectedTeam = teams.find(team => team.id === e.target.value);\n                    setFormData({\n                      ...formData,\n                      team_id: e.target.value,\n                      team_name: selectedTeam?.name || ''\n                    });\n                  }}\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                  required\n                >\n                  <option value=\"\">Выберите команду</option>\n                  {teams.map(team => (\n                    <option key={team.id} value={team.id}>{team.name}</option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">Национальность</label>\n                <input\n                  type=\"text\"\n                  value={formData.nationality}\n                  onChange={(e) => setFormData({ ...formData, nationality: e.target.value })}\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Рост (см)</label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    value={formData.height}\n                    onChange={(e) => setFormData({ ...formData, height: parseInt(e.target.value) })}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700\">Вес (кг)</label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    value={formData.weight}\n                    onChange={(e) => setFormData({ ...formData, weight: parseInt(e.target.value) })}\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Статистика</h4>\n                <div className=\"grid grid-cols-5 gap-4\">\n                  <div>\n                    <label className=\"block text-sm text-gray-600\">Игры</label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      value={formData.stats.games}\n                      onChange={(e) => setFormData({\n                        ...formData,\n                        stats: { ...formData.stats, games: parseInt(e.target.value) }\n                      })}\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm text-gray-600\">Голы</label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      value={formData.stats.goals}\n                      onChange={(e) => setFormData({\n                        ...formData,\n                        stats: { ...formData.stats, goals: parseInt(e.target.value) }\n                      })}\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                      required\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm text-gray-600\">Передачи</label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      value={formData.stats.assists}\n                      onChange={(e) => setFormData({\n                        ...formData,\n                        stats: { ...formData.stats, assists: parseInt(e.target.value) }\n                      })}\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                      required\n                    />\n                  </div>\n                   <div>\n                    <label className=\"block text-sm text-gray-600\">Желтые карточки</label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      value={formData.stats.yellowCards}\n                      onChange={(e) => setFormData({\n                        ...formData,\n                        stats: { ...formData.stats, yellowCards: parseInt(e.target.value) }\n                      })}\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                      required\n                    />\n                  </div>\n                   <div>\n                    <label className=\"block text-sm text-gray-600\">Красные карточки</label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      value={formData.stats.redCards}\n                      onChange={(e) => setFormData({\n                        ...formData,\n                        stats: { ...formData.stats, redCards: parseInt(e.target.value) }\n                      })}\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex justify-end space-x-4 mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setIsModalOpen(false);\n                    setEditingPlayer(null);\n                    setFormData({\n                      name: '',\n                      position: '',\n                      number: 0,\n                      team_id: '',\n                      team_name: '',\n                      nationality: '',\n                      age: 0,\n                      height: 0,\n                      weight: 0,\n                      photo: '',\n                      stats: {\n                        games: 0,\n                        goals: 0,\n                        assists: 0,\n                        yellowCards: 0,\n                        redCards: 0\n                      }\n                    });\n                  }}\n                  className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200\"\n                >\n                  Отмена\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 text-white bg-blue-500 rounded-lg hover:bg-blue-600\"\n                >\n                  {editingPlayer ? 'Сохранить' : 'Добавить'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      <DeletePlayerDialog\n        player={deletingPlayer}\n        onClose={() => setDeletingPlayer(null)}\n        onConfirm={() => handleDelete(deletingPlayer?.id || '')}\n      />\n    </div>\n  );\n};\n\nexport default PlayersSection; ","'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport type { Match } from '@/types/models';\r\nimport { db } from '@/lib/db';\r\nimport { Plus, Edit, Trash2 } from 'lucide-react';\r\n\r\nconst MatchesSection = () => {\r\n  const [matches, setMatches] = useState<Match[]>([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingMatch, setEditingMatch] = useState<Match | null>(null);\r\n  const [formData, setFormData] = useState<Omit<Match, 'id' | 'created_at' | 'updated_at'>>({\r\n    date: new Date(),\r\n    time: '19:00',\r\n    opponent: '',\r\n    venue: 'home' as const,\r\n    competition: '',\r\n    score: {\r\n      home: 0,\r\n      away: 0,\r\n    },\r\n    status: 'scheduled' as const,\r\n    stats: {\r\n      possession: 50,\r\n      shots: 0,\r\n      shotsOnTarget: 0,\r\n      corners: 0,\r\n      fouls: 0,\r\n      yellowCards: 0,\r\n      redCards: 0,\r\n    },\r\n    highlights: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadMatches();\r\n  }, []);\r\n\r\n  const loadMatches = async () => {\r\n    const matchesData = await db.getMatches();\r\n    setMatches(matchesData);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editingMatch) {\r\n        await db.updateMatch(editingMatch.id, formData);\r\n      } else {\r\n        await db.createMatch(formData);\r\n      }\r\n      setIsModalOpen(false);\r\n      setEditingMatch(null);\r\n      setFormData({\r\n        date: new Date(),\r\n        time: '19:00',\r\n        opponent: '',\r\n        venue: 'home' as const,\r\n        competition: '',\r\n        score: {\r\n          home: 0,\r\n          away: 0,\r\n        },\r\n        status: 'scheduled' as const,\r\n        stats: {\r\n          possession: 50,\r\n          shots: 0,\r\n          shotsOnTarget: 0,\r\n          corners: 0,\r\n          fouls: 0,\r\n          yellowCards: 0,\r\n          redCards: 0,\r\n        },\r\n        highlights: [],\r\n      });\r\n      loadMatches();\r\n    } catch (error) {\r\n      console.error('Error saving match:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (match: Match) => {\r\n    setEditingMatch(match);\r\n    setFormData({\r\n      date: match.date,\r\n      time: match.time,\r\n      opponent: match.opponent,\r\n      venue: match.venue,\r\n      competition: match.competition,\r\n      status: match.status,\r\n      score: match.score,\r\n      stats: match.stats,\r\n      highlights: match.highlights,\r\n    });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    if (window.confirm('Вы уверены, что хотите удалить этот матч?')) {\r\n      try {\r\n        await db.deleteMatch(id);\r\n        loadMatches();\r\n      } catch (error) {\r\n        console.error('Error deleting match:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: Match['status']) => {\r\n    switch (status) {\r\n      case 'scheduled':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'live':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'completed':\r\n        return 'bg-gray-100 text-gray-800';\r\n      case 'cancelled':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status: Match['status']) => {\r\n    switch (status) {\r\n      case 'scheduled':\r\n        return 'Запланирован';\r\n      case 'live':\r\n        return 'В прямом эфире';\r\n      case 'completed':\r\n        return 'Завершен';\r\n      case 'cancelled':\r\n        return 'Отменен';\r\n      default:\r\n        return status;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-2xl font-bold\">Управление матчами</h2>\r\n        <button\r\n          onClick={() => setIsModalOpen(true)}\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded-lg flex items-center\"\r\n        >\r\n          <Plus className=\"w-5 h-5 mr-2\" />\r\n          Добавить матч\r\n        </button>\r\n      </div>\r\n\r\n      {/* Matches Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {matches.map((match) => (\r\n          <div key={match.id} className=\"bg-white rounded-lg shadow-md p-6\">\r\n            <div className=\"flex justify-between items-start mb-4\">\r\n              <div>\r\n                <h3 className=\"text-xl font-semibold\">{match.opponent}</h3>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  {new Date(match.date).toLocaleDateString()} • {match.time}\r\n                </p>\r\n                <p className=\"text-sm text-gray-500\">{match.competition}</p>\r\n              </div>\r\n              <div className=\"flex space-x-2\">\r\n                <button\r\n                  onClick={() => handleEdit(match)}\r\n                  className=\"text-blue-500 hover:text-blue-700\"\r\n                >\r\n                  <Edit className=\"w-5 h-5\" />\r\n                </button>\r\n                <button\r\n                  onClick={() => handleDelete(match.id)}\r\n                  className=\"text-red-500 hover:text-red-700\"\r\n                >\r\n                  <Trash2 className=\"w-5 h-5\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm font-medium\">Статус:</span>\r\n                <span className={`px-2 py-1 rounded-full text-xs ${getStatusColor(match.status)}`}>\r\n                  {getStatusText(match.status)}\r\n                </span>\r\n              </div>\r\n\r\n              {match.status === 'completed' && (\r\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                  <div className=\"flex justify-between items-center mb-2\">\r\n                    <span className=\"font-medium\">Счет:</span>\r\n                    <span className=\"text-xl font-bold\">\r\n                      {match.score.home} - {match.score.away}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                    <div>\r\n                      <p className=\"text-gray-600\">Владение мячом:</p>\r\n                      <p className=\"font-medium\">{match.stats.possession}%</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-gray-600\">Удары:</p>\r\n                      <p className=\"font-medium\">{match.stats.shots} ({match.stats.shotsOnTarget} в створ)</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-gray-600\">Угловые:</p>\r\n                      <p className=\"font-medium\">{match.stats.corners}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-gray-600\">Фолы:</p>\r\n                      <p className=\"font-medium\">{match.stats.fouls}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {match.highlights.length > 0 && (\r\n                <div>\r\n                  <h4 className=\"text-sm font-medium mb-2\">Основные моменты:</h4>\r\n                  <ul className=\"text-sm text-gray-600 space-y-1\">\r\n                    {match.highlights.map((highlight, index) => (\r\n                      <li key={index}>• {highlight}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Modal */}\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl\">\r\n            <h3 className=\"text-xl font-bold mb-4\">\r\n              {editingMatch ? 'Редактировать матч' : 'Добавить матч'}\r\n            </h3>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Соперник</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.opponent}\r\n                    onChange={(e) => setFormData({ ...formData, opponent: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Турнир</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.competition}\r\n                    onChange={(e) => setFormData({ ...formData, competition: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Дата</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={formData.date.toISOString().split('T')[0]}\r\n                    onChange={(e) => setFormData({ ...formData, date: new Date(e.target.value) })}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Время</label>\r\n                  <input\r\n                    type=\"time\"\r\n                    value={formData.time}\r\n                    onChange={(e) => setFormData({ ...formData, time: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Место проведения</label>\r\n                  <select\r\n                    value={formData.venue}\r\n                    onChange={(e) => setFormData({ ...formData, venue: e.target.value as 'home' | 'away' })}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    required\r\n                  >\r\n                    <option value=\"home\">Домашний матч</option>\r\n                    <option value=\"away\">Выездной матч</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Статус</label>\r\n                  <select\r\n                    value={formData.status}\r\n                    onChange={(e) => setFormData({ ...formData, status: e.target.value as Match['status'] })}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    required\r\n                  >\r\n                    <option value=\"scheduled\">Запланирован</option>\r\n                    <option value=\"live\">В прямом эфире</option>\r\n                    <option value=\"completed\">Завершен</option>\r\n                    <option value=\"cancelled\">Отменен</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              {formData.status === 'completed' && (\r\n                <>\r\n                  <div>\r\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Счет</h4>\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                      <div>\r\n                        <label className=\"block text-sm text-gray-600\">Наши голы</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          value={formData.score.home}\r\n                          onChange={(e) => setFormData({\r\n                            ...formData,\r\n                            score: { ...formData.score, home: parseInt(e.target.value) }\r\n                          })}\r\n                          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm text-gray-600\">Голы соперника</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          value={formData.score.away}\r\n                          onChange={(e) => setFormData({\r\n                            ...formData,\r\n                            score: { ...formData.score, away: parseInt(e.target.value) }\r\n                          })}\r\n                          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Статистика</h4>\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                      <div>\r\n                        <label className=\"block text-sm text-gray-600\">Владение мячом (%)</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          max=\"100\"\r\n                          value={formData.stats.possession}\r\n                          onChange={(e) => setFormData({\r\n                            ...formData,\r\n                            stats: { ...formData.stats, possession: parseInt(e.target.value) }\r\n                          })}\r\n                          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm text-gray-600\">Удары</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          value={formData.stats.shots}\r\n                          onChange={(e) => setFormData({\r\n                            ...formData,\r\n                            stats: { ...formData.stats, shots: parseInt(e.target.value) }\r\n                          })}\r\n                          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm text-gray-600\">Удары в створ</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          value={formData.stats.shotsOnTarget}\r\n                          onChange={(e) => setFormData({\r\n                            ...formData,\r\n                            stats: { ...formData.stats, shotsOnTarget: parseInt(e.target.value) }\r\n                          })}\r\n                          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm text-gray-600\">Угловые</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          value={formData.stats.corners}\r\n                          onChange={(e) => setFormData({\r\n                            ...formData,\r\n                            stats: { ...formData.stats, corners: parseInt(e.target.value) }\r\n                          })}\r\n                          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm text-gray-600\">Фолы</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          value={formData.stats.fouls}\r\n                          onChange={(e) => setFormData({\r\n                            ...formData,\r\n                            stats: { ...formData.stats, fouls: parseInt(e.target.value) }\r\n                          })}\r\n                          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm text-gray-600\">Желтые карточки</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          value={formData.stats.yellowCards}\r\n                          onChange={(e) => setFormData({\r\n                            ...formData,\r\n                            stats: { ...formData.stats, yellowCards: parseInt(e.target.value) }\r\n                          })}\r\n                          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm text-gray-600\">Красные карточки</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"0\"\r\n                          value={formData.stats.redCards}\r\n                          onChange={(e) => setFormData({\r\n                            ...formData,\r\n                            stats: { ...formData.stats, redCards: parseInt(e.target.value) }\r\n                          })}\r\n                          className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Основные моменты</label>\r\n                    <textarea\r\n                      value={formData.highlights.join('\\n')}\r\n                      onChange={(e) => setFormData({\r\n                        ...formData,\r\n                        highlights: e.target.value.split('\\n').filter(line => line.trim())\r\n                      })}\r\n                      className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                      rows={4}\r\n                      placeholder=\"Введите каждый момент с новой строки\"\r\n                    />\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              <div className=\"flex justify-end space-x-4 mt-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setIsModalOpen(false);\r\n                    setEditingMatch(null);\r\n                    setFormData({\r\n                      date: new Date(),\r\n                      time: '19:00',\r\n                      opponent: '',\r\n                      venue: 'home' as const,\r\n                      competition: '',\r\n                      score: {\r\n                        home: 0,\r\n                        away: 0,\r\n                      },\r\n                      status: 'scheduled' as const,\r\n                      stats: {\r\n                        possession: 50,\r\n                        shots: 0,\r\n                        shotsOnTarget: 0,\r\n                        corners: 0,\r\n                        fouls: 0,\r\n                        yellowCards: 0,\r\n                        redCards: 0,\r\n                      },\r\n                      highlights: [],\r\n                    });\r\n                  }}\r\n                  className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200\"\r\n                >\r\n                  Отмена\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 text-white bg-blue-500 rounded-lg hover:bg-blue-600\"\r\n                >\r\n                  {editingMatch ? 'Сохранить' : 'Добавить'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchesSection; ","'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport type { News } from '@/types/models';\r\nimport { db } from '@/lib/db';\r\nimport { Plus, Edit, Trash2 } from 'lucide-react';\r\n\r\nconst NewsSection = () => {\r\n  const [news, setNews] = useState<News[]>([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editingNews, setEditingNews] = useState<News | null>(null);\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    content: '',\r\n    image: '',\r\n    date: new Date().toISOString().split('T')[0],\r\n    author: '',\r\n    tags: [] as string[],\r\n    category: 'general',\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadNews();\r\n  }, []);\r\n\r\n  const loadNews = async () => {\r\n    const newsData = await db.getNews();\r\n    setNews(newsData);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newsData = {\r\n        ...formData,\r\n        date: new Date(formData.date),\r\n      };\r\n\r\n      if (editingNews) {\r\n        await db.updateNews(editingNews.id, newsData);\r\n      } else {\r\n        await db.createNews(newsData);\r\n      }\r\n      setIsModalOpen(false);\r\n      setEditingNews(null);\r\n      setFormData({\r\n        title: '',\r\n        content: '',\r\n        image: '',\r\n        date: new Date().toISOString().split('T')[0],\r\n        author: '',\r\n        tags: [],\r\n        category: 'general',\r\n      });\r\n      loadNews();\r\n    } catch (error) {\r\n      console.error('Error saving news:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (news: News) => {\r\n    setEditingNews(news);\r\n    setFormData({\r\n      title: news.title,\r\n      content: news.content,\r\n      image: news.image,\r\n      date: news.date.toISOString().split('T')[0],\r\n      author: news.author,\r\n      tags: news.tags || [],\r\n      category: news.category,\r\n    });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    if (window.confirm('Вы уверены, что хотите удалить эту новость?')) {\r\n      try {\r\n        await db.deleteNews(id);\r\n        loadNews();\r\n      } catch (error) {\r\n        console.error('Error deleting news:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatDate = (date: Date) => {\r\n    return new Date(date).toLocaleDateString('ru-RU', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-2xl font-bold\">Управление новостями</h2>\r\n        <button\r\n          onClick={() => setIsModalOpen(true)}\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded-lg flex items-center\"\r\n        >\r\n          <Plus className=\"w-5 h-5 mr-2\" />\r\n          Добавить новость\r\n        </button>\r\n      </div>\r\n\r\n      {/* News Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {news.map((item) => (\r\n          <div key={item.id} className=\"bg-white rounded-lg shadow-md p-6\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div>\r\n                <h3 className=\"text-xl font-semibold\">{item.title}</h3>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  {formatDate(item.date)}\r\n                </p>\r\n              </div>\r\n              <div className=\"flex space-x-2\">\r\n                <button\r\n                  onClick={() => handleEdit(item)}\r\n                  className=\"text-blue-500 hover:text-blue-700\"\r\n                >\r\n                  <Edit className=\"w-5 h-5\" />\r\n                </button>\r\n                <button\r\n                  onClick={() => handleDelete(item.id)}\r\n                  className=\"text-red-500 hover:text-red-700\"\r\n                >\r\n                  <Trash2 className=\"w-5 h-5\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-sm text-gray-600 space-y-2\">\r\n              {item.image && (\r\n                <img\r\n                  src={item.image}\r\n                  alt={item.title}\r\n                  className=\"w-full h-48 object-cover rounded-lg\"\r\n                />\r\n              )}\r\n              <p className=\"line-clamp-3\">{item.content}</p>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {item.tags?.map((tag, index) => (\r\n                  <span\r\n                    key={index}\r\n                    className=\"px-2 py-1 bg-gray-100 text-gray-700 rounded-full text-xs\"\r\n                  >\r\n                    {tag}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              <div className=\"text-xs text-gray-500\">\r\n                <p>Автор: {item.author}</p>\r\n                <p>Категория: {item.category}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Modal */}\r\n      {isModalOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl\">\r\n            <h3 className=\"text-xl font-bold mb-4\">\r\n              {editingNews ? 'Редактировать новость' : 'Добавить новость'}\r\n            </h3>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">Заголовок</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.title}\r\n                  onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">Содержание</label>\r\n                <textarea\r\n                  value={formData.content}\r\n                  onChange={(e) => setFormData({ ...formData, content: e.target.value })}\r\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                  rows={6}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">URL изображения</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.image}\r\n                    onChange={(e) => setFormData({ ...formData, image: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Дата публикации</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={formData.date}\r\n                    onChange={(e) => setFormData({ ...formData, date: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Автор</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.author}\r\n                    onChange={(e) => setFormData({ ...formData, author: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Категория</label>\r\n                  <select\r\n                    value={formData.category}\r\n                    onChange={(e) => setFormData({ ...formData, category: e.target.value })}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                    required\r\n                  >\r\n                    <option value=\"general\">Общие</option>\r\n                    <option value=\"team\">Команда</option>\r\n                    <option value=\"match\">Матчи</option>\r\n                    <option value=\"player\">Игроки</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">Теги</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.tags.join(', ')}\r\n                  onChange={(e) => setFormData({\r\n                    ...formData,\r\n                    tags: e.target.value.split(',').map(tag => tag.trim()).filter(Boolean)\r\n                  })}\r\n                  className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n                  placeholder=\"Введите теги через запятую\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex justify-end space-x-4 mt-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    setIsModalOpen(false);\r\n                    setEditingNews(null);\r\n                    setFormData({\r\n                      title: '',\r\n                      content: '',\r\n                      image: '',\r\n                      date: new Date().toISOString().split('T')[0],\r\n                      author: '',\r\n                      tags: [],\r\n                      category: 'general',\r\n                    });\r\n                  }}\r\n                  className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200\"\r\n                >\r\n                  Отмена\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"px-4 py-2 text-white bg-blue-500 rounded-lg hover:bg-blue-600\"\r\n                >\r\n                  {editingNews ? 'Сохранить' : 'Добавить'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsSection; ","'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { \r\n  Users, \r\n  Calendar, \r\n  Newspaper, \r\n  Trophy,\r\n  Settings\r\n} from 'lucide-react';\r\nimport Coaches2Management from '@/pages/admin/Coaches2Management';\r\nimport TeamsSection from './components/TeamsSection';\r\nimport PlayersSection from './components/PlayersSection';\r\nimport MatchesSection from './components/MatchesSection';\r\nimport NewsSection from './components/NewsSection';\r\n\r\nconst AdminPanel = () => {\r\n  const [activeSection, setActiveSection] = useState('teams');\r\n\r\n  return (\r\n    <div className=\"h-screen bg-gray-100 p-8\">\r\n      {activeSection === 'teams' && <TeamsSection />}\r\n      {activeSection === 'players' && <PlayersSection />}\r\n      {activeSection === 'matches' && <MatchesSection />}\r\n      {activeSection === 'news' && <NewsSection />}\r\n      {activeSection === 'settings' && <SettingsSection />}\r\n      {activeSection === 'coaches2' && <Coaches2Management />}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Временный компонент настроек\r\nconst SettingsSection = () => {\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-2xl font-bold mb-6\">Настройки</h2>\r\n      <p className=\"text-gray-600\">Раздел настроек находится в разработке.</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel; "],"names":["TeamsSection","teams","setTeams","useState","isModalOpen","setIsModalOpen","editingTeam","setEditingTeam","formData","setFormData","useEffect","loadTeams","__async","teamsData","db","handleSubmit","e","__spreadProps","__spreadValues","error","handleEdit","team","handleDelete","id","jsxs","jsx","Plus","Edit","Trash2","PlayersSection","players","setPlayers","selectedTeamId","setSelectedTeamId","editingPlayer","setEditingPlayer","deletingPlayer","setDeletingPlayer","loadPlayers","teamId","playersData","handleTeamChange","newTeamId","player","_b","_a","_d","_c","_f","_e","_h","_g","_j","_i","selectedTeam","DeletePlayerDialog","MatchesSection","matches","setMatches","editingMatch","setEditingMatch","loadMatches","matchesData","match","getStatusColor","status","getStatusText","highlight","index","Fragment","line","NewsSection","news","setNews","editingNews","setEditingNews","loadNews","newsData","formatDate","date","item","tag","AdminPanel","activeSection","setActiveSection","SettingsSection","Coaches2Management"],"mappings":"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"}